//xlang Source, Name:Conn.xcsm 
//Date: Thu Aug 13:58:46 2019 

class Conn{
    static String MYSQL_HOST = "127.0.0.1";
    static String MYSQL_UNAME = "user";
    static String MYSQL_PASSWD = "pwd";
    static String MYSQL_DBNAME = "xblog";
    
    //连接池
    static ConnectionPool pool = new ConnectionPool();
    
    //读取配置
    static void reloadConf(){
        try{
            JsonObject conf = install.readConf();
            MYSQL_UNAME = conf.getString("usr");
            MYSQL_PASSWD = conf.getString("pwd");
        }catch(Exception e){
            
        }
    }
    
    // 连接池初始化
    static bool init(){
    
        //配置参数
        pool.config(new Sql.ConnPoolCallback(){
            Sql.Connection createConnection()override{
                //TODO  创建新链接
                Sql.Connection conn;
                try{
                    conn = Sql.Database.getConnection("mysql");
                    if (conn != nilptr){
                        conn.create(MYSQL_HOST, MYSQL_UNAME, MYSQL_PASSWD);
                        conn.setOption(Mysql.MysqlOption.CHARSET,"utf8");
                        conn.setOption(Mysql.MysqlOption.SELECTDB, MYSQL_DBNAME);
                    }
                    
                }catch(Exception e){
                    if (conn != nilptr){
                        conn.close();
                    }
                    conn = nilptr;
                }
                return conn;
            }
            
            //测试链接
            bool alive(Sql.Connection conn)override{
                //TODO 
                Sql.Statement state =  conn.createStatement();
                Sql.ResultSet res = nilptr;
                _system_.log("ConnectionPool active",7,"test",false);
                try{
                    res = state.executeQuery("select 1");
                    return true;
                }catch(Exception e){
                    
                }finally{
                    state.close();
                    if (res != nilptr){
                        res.close();
                    }
                }
                return false;
            }
        },"2006,2014",50, 50, 3, 300000, 10000);
        
        return true;
    }
    
    static Connection get(){
        return pool.getConnector();
    }
    
    static void release(Connection conn){
        pool.recycle(conn);
    }
};