//xlang Source, Name:PostComment.xcsm 
//Date: Tue Aug 02:45:02 2019 

class PostComment : HttpServlet{
    public PostComment(){
        super(0, "/comment\.html");
    }
    
	void doGet(HttpServletRequest request, HttpServletResponse response) override {
		//TODO:	
        String uid = request.getSession("id");
        String cid = request.getArg("id");
        String aid = request.getArg("aid");
        int error = -1;
        int lastid = 0;
        
        if (uid != nilptr && cid != nilptr && aid != nilptr){
            int user = uid.parseInt();
            int coid = cid.parseInt();
            int arid = aid.parseInt();
            
            if (user > 0 && coid > 0 && arid > 0){
                PreparedStatement state;
                Connection conn;
                
                try{ 
                    conn = Conn.get();
                    if (conn != nilptr){
                        state = conn.prepareStatement("delete from `comment` where `id` = ? limit 1");
                        state.setValue(coid);
                        state.executeUpdate();
                        error = 0;
                        state.executeUpdate("update `xblog` set `comment` = `comment` - 1 where id = " + arid + " limit 1");
                    }
                }catch(SqlException e){
                    error = -2;
                }catch(Exception e){
                    error = -1;
                }finally{
                    if (state != nilptr){
                        state.close();
                    }
                    if (conn != nilptr){
                        Conn.release(conn);
                    }
                }
                
                ArticleCacher.makeCache(arid,nilptr,nilptr,0,0,true);
            }
        }
        
        JsonObject root = new JsonObject();
        root.put("error", error);
        response.print(root.toString(false));
	}

	void doPost(HttpServletRequest request, HttpServletResponse response) override {
        int error = -1;
        
        String code = request.getSession("code");
        String codes = request.getParam("code");
        
        if (codes != nilptr && code != nilptr){
            if (codes.upper().equals(code.upper()) == true){
                Connection conn;
                PreparedStatement state;
                
                try{ 
                    String name = request.getParam("name");
                    String art = request.getParam("art");
                    String email = request.getParam("email");
                    String content = request.getParam("content");
                    String flag = request.getParam("flags");
                    if (name != nilptr && art != nilptr && email != nilptr && content != nilptr && flag != nilptr){
                        conn = Conn.get();
                        if (conn != nilptr){
                            state = conn.prepareStatement("insert into `comment` (`aid`, `name`, `flag`, `email`, `content`, `posttime`)VALUES(?, ?, ?, ?, ?, NOW())");
                            state.setValue(art.parseInt());
                            state.setValue(name);
                            state.setValue(flag.parseInt());
                            state.setValue(email);
                            state.setValue(content);
                            state.execute();
                            
                            state.executeUpdate("update `xblog` set `comment` = `comment` + 1 where id = " + art.parseInt() + " limit 1");
                            error = 0;
                            ArticleCacher.makeCache(art.parseInt(),nilptr,nilptr,0,0,true);
                        }
                    }
                }catch(SqlException e){
                    error = -2;
                    _system_.log("PostComment",7,e.getMessage(),false);
                }catch(Exception e){
                    error = -1;
                    _system_.log("PostComment",7,e.getMessage(),false);
                }finally{
                    if (state != nilptr){
                        state.close();
                    }
                    if (conn != nilptr){
                        Conn.release(conn);
                    }
                }
            }
        }
        JsonObject root = new JsonObject();
        root.put("error", error);
        response.print(root.toString(false));
	}

};